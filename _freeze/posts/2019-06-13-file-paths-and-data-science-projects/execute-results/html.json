{
  "hash": "c51b341e88b97867af53897a0ab74b65",
  "result": {
    "markdown": "---\ntitle: File paths and data science projects\nauthor: \"Philip Khor\"\ndate: '2019-06-13'\nsummary: \"Some thoughts on keeping a data science project tidy.\"\nslug: file-paths-and-ds-projects\ncategories: []\ntags: []\n---\n\n\nLarge data science projects can be a pain to manage. Cookiecutter Data Science recommends the following project folder structure, and I think it's a good picture of how a data science project *should* be organized: \n\n```\n├── README.md          \n├── data\n│   ├── external       \n│   ├── interim        \n│   ├── processed      \n│   └── raw            \n├── docs               \n├── models            \n├── notebooks          \n├── references         \n├── reports           \n│   └── figures        \n├── requirements.txt   \n├── setup.py           \n├── src                \n│   ├── __init__.py    \n│   ├── data           \n│   │   └── make_dataset.py\n│   ├── features       \n│   │   └── build_features.py\n│   ├── models         \n│   │   ├── predict_model.py\n│   │   └── train_model.py\n│   └── visualization  \n│       └── visualize.py\n```\n\nSpecifically, file paths can be hard to manage, since it's not great practice to use absolute paths in your code. In R, I've gotten used to using the `here` package, which automatically detects the root folder of your project, so that to import a csv file from the `external` folder, all I have to do is \n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(readr)\nread_csv(here(\"data\", \"external\", \"my_csv_file.csv\"))\n```\n:::\n\n\nso long as a `.here` or `.Rproj` file is present in the project directory. \n\nPreviously, I used `..` a lot, which references the directory above the current directory. However, if you move your files around, you'll have to change your file paths too. \n\nWhile looking for a Python alternative, I found a package [`rootpath`](https://github.com/grimen/python-rootpath) which essentially does the same with the `rootpath.detect()` function. \n\n```python\nimport rootpath\nimport os \n\nROOT_DIR = rootpath.detect()\nos.chdir(ROOT_DIR)\nfile_path = \"data/interim/...\"\n```\n\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}